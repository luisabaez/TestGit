/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abilabpsync;

import javax.swing.JOptionPane;


/**
 *
 * @author Abner
 */
public class FirstSync extends javax.swing.JFrame {
    
    BackgroundSync invoiceSync;

    /**
     * Creates new form FirstSync
     */
    public FirstSync() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        instructionjLabel = new javax.swing.JLabel();
        quiestionjLabel = new javax.swing.JLabel();
        syncOpenTransactionCheckBox = new javax.swing.JCheckBox();
        syncAllCheckBox = new javax.swing.JCheckBox();
        cancelledJButton = new javax.swing.JButton();
        syncJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("First Sync");

        instructionjLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        instructionjLabel.setText("This is the first time Abila is synchronzed with Bill and Pay.");

        quiestionjLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        quiestionjLabel.setText("What would you like to do? ");

        buttonGroup1.add(syncOpenTransactionCheckBox);
        syncOpenTransactionCheckBox.setSelected(true);
        syncOpenTransactionCheckBox.setText("Sync Open Transaction");
        syncOpenTransactionCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncOpenTransactionCheckBoxActionPerformed(evt);
            }
        });

        buttonGroup1.add(syncAllCheckBox);
        syncAllCheckBox.setText("Sync All");

        cancelledJButton.setText("Cancel");
        cancelledJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelledJButtonActionPerformed(evt);
            }
        });

        syncJButton.setText("Sync");
        syncJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                syncJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(syncOpenTransactionCheckBox)
                .addGap(90, 90, 90)
                .addComponent(syncAllCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(quiestionjLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(instructionjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(syncJButton)
                        .addGap(18, 18, 18)
                        .addComponent(cancelledJButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(instructionjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(quiestionjLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(syncOpenTransactionCheckBox)
                    .addComponent(syncAllCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelledJButton)
                    .addComponent(syncJButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void syncOpenTransactionCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncOpenTransactionCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_syncOpenTransactionCheckBoxActionPerformed

    private void syncJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_syncJButtonActionPerformed
        // TODO add your handling code here:
        if(syncOpenTransactionCheckBox.isSelected()){
            //MainFrame.SyncBal=true;
            //invoiceSync = new BackgroundSync(MainFrame.progressMonitor, MainFrame.S, cancelButton, MainFrame.sendEmails.isSelected(), false);
            this.dispose();
        } else if(syncAllCheckBox.isSelected()){
            MainFrame.SyncBal=false;
            this.dispose();
        } else {
            //JOptionPane.showMessageDialog(this, "Please select one option");
        }
    }//GEN-LAST:event_syncJButtonActionPerformed

    private void cancelledJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelledJButtonActionPerformed
        // TODO add your handling code here:
       // FirstSync().setVisible(false); //
       //System.exit(0);
       this.dispose();
    }//GEN-LAST:event_cancelledJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FirstSync.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FirstSync.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FirstSync.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FirstSync.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FirstSync().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelledJButton;
    private javax.swing.JLabel instructionjLabel;
    private javax.swing.JLabel quiestionjLabel;
    public static javax.swing.JCheckBox syncAllCheckBox;
    private javax.swing.JButton syncJButton;
    public static javax.swing.JCheckBox syncOpenTransactionCheckBox;
    // End of variables declaration//GEN-END:variables



}
